component Dancer
	  attributes: r, p, u
	  behaviour:
		let {
		    A := (u)@(true).(x = this.u)(x).[p := 1]nil
	                  +
			 (r = this.r)(x).(y /= this.u)(y).A
		}
		init A
end

component Follower
	  attributes: r, p, u
	  behaviour:
		let {
		    P := (r /= this.r)(x).
		    (
		     (x)@(true).[p := 1]nil
		          +
		     (y = x and r = this.r)(y).P
		    )
		}
		init P
end

C1: Dancer (u -> 1, p -> 0, r -> 1)
C2: Dancer (u -> 2, p -> 0, r -> 1)
C3: Follower (u -> 3, p -> 0, r -> 1)
C4: Follower (u -> 4, p -> 0, r -> 0)
C5: Follower (u -> 5, p -> 0, r -> 0)
